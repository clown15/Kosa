--- Openstack 싱글 노드 설치
# vi /etc/sysconfig/network-scripts/ifcfg-ens160
TYPE=Ethernet
BOOTPROTO=none
NAME=ens160
DEVICE=ens160
ONBOOT=yes
IPADDR=192.168.0.110
NETMASK=255.255.240.0
GATEWAY=192.168.0.1
DNS1=192.168.0.66
DNS2=8.8.4.4

# vi /etc/selinux/config
SELINUX=disabled

# dnf install network-scripts -y
# systemctl disable firewalld
# systemctl disable NetworkManager
# systemctl enable network
# systemctl start network
# reboot
# dnf update -y
# dnf config-manager --enable powertools
# dnf install -y centos-release-openstack-yoga
# dnf update -y
# dnf install -y openstack-packstack
# packstack --gen-answer-file /root/answers.txt
# vi /root/answers.txt
CONFIG_DEFAULT_PASSWORD=Kosa0401!
CONFIG_KEYSTONE_ADMIN_PW=Kosa0401!
CONFIG_CINDER_VOLUMES_SIZE=100G
CONFIG_NTP_SERVERS=0.kr.pool.ntp.org
CONFIG_CEILOMETER_INSTALL=n
CONFIG_AODH_INSTALL=n
CONFIG_HEAT_INSTALL=y
CONFIG_NEUTRON_L2_AGENT=openvswitch
CONFIG_NEUTRON_ML2_TYPE_DRIVERS=vxlan,flat
CONFIG_NEUTRON_ML2_TENANT_NETWORK_TYPES=vxlan
CONFIG_NEUTRON_ML2_MECHANISM_DRIVERS=openvswitch
CONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS=extnet:br-ex
CONFIG_NEUTRON_OVS_BRIDGE_IFACES=br-ex:ens160
CONFIG_PROVISION_DEMO=n

# packstack --answer-file /root/answers.txt
11:08 ~ 11:29

--- 볼륨 추가 명령어
$ lsblk
$ df -h
$ sudo mkfs -t xfs /dev/vdb
$ sudo mount /dev/vdb /mnt/
$ df -h

--- 오브젝트 스토리지 활용 및 웹서버 설치
$ sudo yum install -y httpd wget
$ wget http://192.168.0.110:8080/v1/AUTH_b945e8b7c1e84a628c1e3776c5323093/web-store/openstack.tar
$ sudo tar -xvf openstack.tar -C /var/www/html/
$ sudo systemctl enable --now httpd

--- 템플릿 생성기 활용
heat_template_version: "2021-04-16"
description: "version 2017-09-01 created by HOT Generator at Thu, 24 Mar 2022 06:33:11 GMT."
resources: 
  Server_1: 
    type: "OS::Nova::Server"
    properties: 
      security_groups: 
        - "9b873b26-b28b-41fa-9879-5643e41e697a"
      networks: 
        - subnet: "837fdb7b-f531-44d4-941f-ef4a82b00813"
      name: WEB03
      flavor: "m1.micro"
      image: "ab3427b3-fdbe-4972-816c-391dc7178286"
      availability_zone: nova
      key_name: "web-key"

--- CLI 작업(ad-hoc)
Project
# source keystonerc_admin
# openstack project create --domain Default --description "cli-project" cli-project

User
# openstack user create --domain Default --project cli-project --password-prompt cli-user
# openstack role add --project cli-project --user cli-user _member_

Flavor
# openstack flavor create --id 6 --vcpus 1 --ram 1024 --disk 10 m1.micro

External Network
# openstack network create --project cli-project --provider-network-type flat \
--provider-physical-network extnet --external External-Network
# openstack subnet create --network External-Network \
--project cli-project --subnet-range 192.168.0.0/20 \
--allocation-pool start=192.168.8.1,end=192.168.8.126 \
--gateway 192.168.0.1 --no-dhcp External-Subnet

Token
# vi keystonerc_cli-user
unset OS_SERVICE_TOKEN
    export OS_USERNAME=cli-user
    export OS_PASSWORD='Kosa0401!'
    export OS_REGION_NAME=RegionOne
    export OS_AUTH_URL=http://192.168.0.110:5000/v3
    export PS1='[\u@\h \W(keystone_cli-user)]\$ '

export OS_PROJECT_NAME=cli-project
export OS_USER_DOMAIN_NAME=Default
export OS_PROJECT_DOMAIN_NAME=Default
export OS_IDENTITY_API_VERSION=3

# source keystonerc_cli-user

Internal Network
# vi /etc/neutron/policy.yaml
"create_network:provider:network_type": "role:admin or project_id:%(project_id)s"
"create_floatingip:floating_ip_address": "role:admin or project_id:%(project_id)s"
# projectID=$(openstack project list | grep cli-project | awk '{print $2}')
# openstack network create --project $projectID --provider-network-type vxlan Internal-Network
# openstack subnet create --network Internal-Network --subnet-range 10.21.0.0/20 --gateway 10.21.0.1 \
--dhcp --dns-nameserver 8.8.8.8 Internal-Subnet

Router
# openstack router create Router
# openstack router set --external-gateway External-Network Router
# openstack router add subnet Router Internal-Subnet

Security Group
# openstack security group create SG-WEB
# openstack security group rule create --protocol icmp --ingress SG-WEB
# openstack security group rule create --protocol tcp --dst-port 22:22 SG-WEB
# openstack security group rule create --protocol tcp --dst-port 80:80 SG-WEB

KeyPair
# openstack keypair create --public-key ~/.ssh/id_rsa.pub cli-key
기존에 있던 키 페어 활용
# openstack keypair create --private-key my-key.pem my-key
키 페어를 생성하고 공개키를 my-key로 추가한다.

Image
# openstack image create --file CentOS-7-x86_64-GenericCloud-2111.qcow2 \
--disk-format qcow2 --container-format bare --public CentOS7
--public 옵션은 admin사용자에서 가능하다.
# openstack image create --file bionic-server-cloudimg-amd64.img \
--disk-format qcow2 --container-format bare Ubuntu18

Floating IP
# openstack floating ip create External-Network
# openstack floating ip create --floating-ip-address 192.168.8.100 External-Network

Instance
# openstack server create --flavor m1.micro --image CentOS7 --security-group SG-WEB \
--network Internal-Network --boot-from-volume 10 --key-name cli-key --user-data httpd.file WEBSERVER
# openstack server create --flavor m1.micro --image Ubuntu18 --security-group SG-DB --network Internal-Network --boot-from-volume 10 --key-name cli-key DBSERVER

Floating IP 연결
# openstack server list
# openstack floating ip list
# openstack server add floating ip WEBSERVER 192.168.8.100
# ssh -i .ssh/id_rsa centos@192.168.8.100

Volume
# openstack volume create --size 8 WEB-ADD
# openstack volume list
# openstack server list
# openstack server add volume WEBSERVER WEB-ADD